import { fetchSheetData, updateSheetData } from "../utils/googleSheets.js";
import { spreadsheetId, updateRange } from "../utils/config.js";

export async function checkProductionData() {
    console.log("‚úÖ Spou≈°t√≠m kontrolu v√Ωroby...");

    // Z√≠sk√°me data z tabulky
    const sheetData = await fetchSheetData(spreadsheetId, updateRange);

    if (!sheetData || !sheetData.values || sheetData.values.length < 2) {
        console.error("‚ùå Chyba: Data nejsou dostupn√° nebo tabulka je pr√°zdn√°.");
        return;
    }

    // Zpracujeme data
    const headers = sheetData.values[0]; // Hlaviƒçka tabulky
    console.log("üìä Hlaviƒçky tabulky:", headers);

    const indexIDZakazky = headers.indexOf("ID zak√°zky");
    const indexPrubeznaDoba = headers.indexOf("Pr≈Øbƒõ≈æn√° doba");
    const indexStav = headers.indexOf("Stav");
    const indexTerminDodani = headers.indexOf("Term√≠n dod√°n√≠");
    const indexVyrobitKs = headers.indexOf("Vyrobit ks");
    const indexKontrolaDat = headers.indexOf("Kontrola dat");

    if ([indexIDZakazky, indexPrubeznaDoba, indexStav, indexTerminDodani, indexVyrobitKs, indexKontrolaDat].includes(-1)) {
        console.error("‚ùå Chyba: Jeden nebo v√≠ce po≈æadovan√Ωch sloupc≈Ø nebylo nalezeno.");
        return;
    }

    const updatedValues = sheetData.values.map((row, rowIndex) => {
        if (rowIndex === 0) return row; // P≈ôeskoƒç√≠me hlaviƒçku

        let errors = [];

        // ‚úÖ Spr√°vn√° kontrola chybƒõj√≠c√≠ch pol√≠ (trim() ≈ôe≈°√≠ mezery, !! p≈ôev√°d√≠ na boolean)
        if (!row[indexIDZakazky] || row[indexIDZakazky].trim() === "") {
            errors.push("ID zak√°zky");
        }
        if (!row[indexPrubeznaDoba] || row[indexPrubeznaDoba].trim() === "" || Number(row[indexPrubeznaDoba]) <= 0) {
            errors.push("pr≈Øbƒõ≈æn√° doba");
        }
        if (!row[indexStav] || row[indexStav].trim() === "") {
            errors.push("stav zak√°zky");
        }
        if (!row[indexTerminDodani] || row[indexTerminDodani].trim() === "") {
            errors.push("term√≠n dod√°n√≠");
        }
        if (!row[indexVyrobitKs] || row[indexVyrobitKs].trim() === "" || Number(row[indexVyrobitKs]) <= 0) {
            errors.push("vyrobit kus≈Ø");
        }

        row[indexKontrolaDat] = errors.length > 0 ? errors.join(", ") : "ok";
        return row;
    });

    console.log("‚úÖ Upraven√° data pro z√°pis:", updatedValues);
    await updateSheetData(updatedValues); // ‚úÖ Zap√≠≈°eme zpƒõt do tabulky
}
